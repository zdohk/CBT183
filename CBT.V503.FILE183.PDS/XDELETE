/*************************************************************** REXX */
/*                                                                    */
/* MODULE NAME = XDELETE                                              */
/*                                                                    */
/* DESCRIPTIVE NAME = Delete data sets using generic name             */
/*                                                                    */
/* STATUS = R205                                                      */
/*                                                                    */
/* FUNCTION = The XDELETE command scans the catalog for data set      */
/*            names that match a filter (such as USERID.*.C%K*.**)    */
/*            then issues a DELETE command for each disk data set     */
/*            or a DELETE NOSCRATCH for each tape data set.           */
/*                                                                    */
/* AUTHOR   =  Gilbert Saint-Flour <carlos@gsf-soft.com>              */
/*             http://gsf-soft.com/Freeware/                          */
/*                                                                    */
/* DEPENDENCIES = TSO/E V2                                            */
/*                DFP 3.2.0                                           */
/*                Catalog Search Interface                            */
/*                                                                    */
/* SYNTAX   =  XDELETE                                                */
/*                generic_name      generic name specification        */
/*                EXECUTE           indicates that DELETE commands    */
/*                                  will actually be issued for       */
/*                                  selected data sets.               */
/*                                  DELETE commands are only          */
/*                                  displayed otherwise.              */
/*                                                                    */
/* SPECIFYING THE GENERIC NAME                                        */
/*                                                                    */
/* The generic name defines the level qualifiers for the data set     */
/* names to be included in the list.  Qualifiers can be specified     */
/* fully, partially or defaulted.  For data sets that are cataloged   */
/* in CVOL or VSAM catalogs, the high level qualifier must be         */
/* specified fully.  For ICF catalogs, at least one qualifier must    */
/* be partially specified.  A Dsname Level of '*' or '**' or any      */
/* combination of '*' and '**' qualifiers is invalid.                 */
/*                                                                    */
/* The following examples are valid for generic_name:                 */
/*                                                                    */
/*  DSNAME LEVEL              Data Set List                           */
/* ------------------------------------------------------------------ */
/*  SYS1.PARMLIB         One data set name.                           */
/*                                                                    */
/*  SYS1.*               All data set names with SYS1 as the first    */
/*                       qualifier and one more qualifier.            */
/*                                                                    */
/*  SYS1 or SYS1.**      All data set names with SYS1 as the first    */
/*                       qualifier.                                   */
/*                                                                    */
/*  **.LIST              All data set names with a qualifier of LIST. */
/*                                                                    */
/*  AAA%*.B*%%%B         All data sets that start with AAA, have at   */
/*                       least one more character in the high level   */
/*                       qualifier and have a second qualifier that   */
/*                       begins and ends in B with at least three     */
/*                       letters between the Bs.                      */
/*                                                                    */
/* Data set name qualifiers can be partially specified using asterisks*/
/* as global file-name characters and percent signs as placeholders:  */
/*      *  A single asterisk by itself indicates that at least one    */
/*         qualifier is needed to occupy that position.  A single     */
/*         asterisk within a qualifier indicates that zero or more    */
/*         characters can occupy that position.                       */
/*     **  A double asterisk indicates that zero or more qualifiers   */
/*         can occupy that position.  A double asterisk within a      */
/*         qualifier is invalid.                                      */
/*      %  A single percent sign indicates that any one single        */
/*         alphameric or national character can occupy that position. */
/*  %%...  One to eight percent signs can be specified in each        */
/*         qualifier.                                                 */
/*                                                                    */
/* INSTALLATION = XDELETE can be installed in a library concatenated  */
/*                to SYSEXEC, SYSPROC, or any private library         */
/*                accessible to the EXEC command.                     */
/*                                                                    */
/*                The CSI module (IGGCSI00) must be available at      */
/*                execution time.  IGGCSI00 is available with         */
/*                DFSMS/MVS V1R4 or the CSI PRPQ (5799-CSI).          */
/*                                                                    */
/*                Recent MVS systems also contain a copy of IGGCSI00  */
/*                in the following distribution libraries:            */
/*                                                                    */
/*                      1. SYS1.AOS28(ARCCSI)                         */
/*                      2. SYS1.AAPPMOD2(APPCSI00)                    */
/*                                                                    */
/* EXECUTION = XDELETE is invoked as a TSO command, either on-line    */
/*          or in batch, as shown in the following example.           */
/*                                                                    */
/*          //XDELETE EXEC PGM=IKJEFT01                               */
/*          //SYSEXEC  DD DSN=GSFSOFT.FILE183.PDS,DISP=SHR            */
/*          //SYSTSPRT DD SYSOUT=*                                    */
/*          //SYSTSIN  DD *                                           */
/*          %XDELETE  ABC*.D%%FG*.**  EXEC                            */
            /*                                                        */
/*                                                                    */
/* DOCUMENTATION = The documentation for the CSI can be found in      */
/*                 DFSMS/MVS V1R4 Managing Catalogs (Appendix D)      */
/*                 and on the Web at:                                 */
/*                                                                    */
/* ppdbooks.pok.ibm.com/cgi-bin/bookmgr/bookmgr.cmd/BOOKS/DGT1C104/D.0*/
/*                                                                    */
/* CHANGE ACTIVITY                                                    */
/*                                                                    */
/*  101   EXIT with maxcc=12 if DELETE fails                          */
/*  200   Rewrite much of the code to make it more generic            */
/*  201   Remove erroneous apostrophes in VALUE() function            */
/*  202   Check devtyp=disk instead of devtyp\=tape for SCRATCH       */
/*  203   Check type for VSAM entries                                 */
/*        Check syntax and issue message if invalid                   */
/*  204   Display creation date (DSCRDT2) on DELETE commands          */
/*  205   TRANSLATE(STRIP(execute))                                   */
/*                                                                    */
/**********************************************************************/
ARG filter execute                  /*   GET FILTER KEY              */
IF filter='' THEN DO
  SAY 'Syntax: XDELETE filter <EXECute>'
  EXIT 12                           /*   filter is missing           */
  END
execute=TRANSLATE(STRIP(execute))
IF execute\='' THEN
  IF ABBREV('EXECUTE',execute,4) THEN
    execute='EXECUTE'
  ELSE DO
    SAY 'The second operand is invalid'
    SAY 'Syntax: XDELETE filter EXECute'
    EXIT 12                         /*   filter is missing           */
    END
 /*------------------------------------------------------------------*/
 /*                                                                  */
 /*  Initialize the parm list and the work variables                 */
 /*                                                                  */
 /*------------------------------------------------------------------*/
csifiltk = STRIP(filter,'BOTH',"'") /*  FILTER KEY                  */
csicatnm = ''                       /*  CLEAR CATALOG NAME          */
csiresnm = ''                       /*  CLEAR RESUME NAME           */
csidtyps = 'ACH'                    /*  NVSAM, CLUSTER, GDS         */
csicldi  = 'Y'                      /*  RETURN DATA & INDEX         */
csicldi  = ' '                      /*  Do not return Data & Index  */
csiresum = ' '                      /*  CLEAR RESUME FLAG           */
csis1cat = 'Y'                      /*  Search only one catalog     */
csis1cat = ' '                      /*  SEARCH ALL CATALOGS         */

csifldno = 3                        /*  NUMBER OF FIELDS            */
fldnm.1  = 'DEVTYP'                 /*    field name                */
fldnm.2  = 'VOLSER'                 /*    field name                */
fldnm.3  = 'DSCRDT2'                /*    field name                */

csiopts  = csicldi || csiresum || csis1cat || ' '
csifield = LEFT(csifiltk,44) || LEFT(csicatnm,44) || LEFT(csiresnm,44),
        || LEFT(CSIDTYPS,16) || CSIOPTS  || D2C(csifldno,2)
DO i=1 to csifldno
  csifield = csifield || left(fldnm.i,8)
END

modrsnrc = COPIES(' ',4)            /*  CLEAR MODULE/RETURN/REASON  */
worklen = 256*1024                  /*  Size of work-area in bytes  */
worka = LEFT(D2C(worklen,4),worklen,'00'X)
maxcc=0                             /*  Init highest return-code    */

 /********************************************************************/
 /*                                                                  */
 /*  Main CSI Loop Until csiresum=' '                                */
 /*                                                                  */
 /********************************************************************/
DO FOREVER
   /*--------------------------------------------------------------*\
   |           Issue LINK to the Catalog Search Interface           |
   \*--------------------------------------------------------------*/
  ADDRESS LINKPGM 'IGGCSI00 MODRSNRC CSIFIELD worka'
  IF RC>0 THEN DO
    rtn=C2D(SUBSTR(modrsnrc,4,1))      /* Return Code                */
    rsn=C2D(SUBSTR(modrsnrc,3,1))      /* Reason Code                */
    IF LEFT(modrsnrc,2)='FFFF'X THEN DO
      SAY 'IGGCSI00 Error - RC='rtn 'RSN='rsn
      IF RC>4 THEN                     /* Severe Error, QUIT         */
        EXIT rc
      END
    ELSE DO
      SAY 'IDC3009I VSAM CATALOG RETURN CODE IS' rtn,
          '- REASON CODE IS IGG0CLA' || LEFT(modrsnrc,2) '-' rsn
      END
    END
  csiresnm = SUBSTR(CSIFIELD,89,44) /* GET RESUME name FOR NEXT LOOP */
  csiresum = SUBSTR(CSIFIELD,150,1) /* GET RESUME FLAG FOR NEXT LOOP */
  usedlen = C2D(SUBSTR(worka,9,4))  /* GET AMOUNT OF WORK AREA USED  */
  pos1=15                           /* STARTING POSITION             */
   /*--------------------------------------------------------------*\
   |              Process Data Returned in Work Area                |
   \*--------------------------------------------------------------*/
  DO WHILE pos1 < usedlen           /* DO UNTIL ALL DATA IS PROCESSED*/

    flag  = SUBSTR(worka,pos1+0,1)     /* EXTRACT FLAG               */
    type = SUBSTR(worka,pos1+1,1)      /* EXTRACT ENTRY TYPE         */
    dsname = SUBSTR(worka,pos1+2,44)   /* EXTRACT ENTRY NAME         */
    IF type='0' THEN DO                /* CATALOG                    */
      catname=dsname                   /* Save catalog name          */
      dlen=50                          /* Length of Catalog entry    */
      END
    ELSE DO
      pos1 = pos1 + 46                 /* skip flag, type, name      */
      csieretn=''
      csienter='40'X                   /* Error Indicator            */
      IF csienter=BITAND(flag,csienter) THEN DO
        csieretn= SUBSTR(worka,pos1,4) /* error codes: mod,rsn,rtn   */
        rtn=C2D(SUBSTR(csieretn,4,1))  /* Return Code                */
        rsn=C2D(SUBSTR(csieretn,3,1))  /* Reason Code                */
        SAY '**Error Processing catalog entry - Name='STRIP(dsname),
            'Type='type 'Flag='C2X(flag) 'CAT='STRIP(catname)
        SAY 'IDC3009I VSAM CATALOG RETURN CODE IS' rtn,
            '- REASON CODE IS IGG0CLA' || LEFT(csieretn,2) '-' rsn
        dlen=4                         /* Length of Error Info       */
        maxcc=12                       /* Remember we had an error   */
        END
      ELSE DO
        dlen = C2D(SUBSTR(worka,pos1,2)) /* length of data           */
        CALL Process_Catalog_Entry       /* Process current entry    */
        END
      END
    pos1 = pos1 + dlen                   /* next catalog entry       */
  END    /* DO WHILE pos1 < usedlen */
  IF csiresum\='Y' THEN LEAVE
END /* RESUME = Y */
IF cmd='CMD' THEN
  SAY "No data sets deleted"
EXIT maxcc
 /********************************************************************/
 /*                                                                  */
 /*  Process current catalog entry                                   */
 /*                                                                  */
 /********************************************************************/
Process_Catalog_Entry:
  pos2 = pos1+4                        /* start of length array    */
  pos3 = pos2+csifldno*2               /* start of data array      */
   /*--------------------------------------------------------------*\
   |              Parse data into named variables                   |
   \*--------------------------------------------------------------*/
  DO i=1 TO csifldno
    l=C2D(SUBSTR(worka,pos2,2))        /* length of current field  */
    x=VALUE(fldnm.i,SUBSTR(worka,pos3,l)) /* move value            */
    pos2=pos2+2                        /* next length              */
    pos3=pos3+l                        /* next data                */
    END
   /*--------------------------------------------------------------*\
   |              Generate DELETE/HDELETE commands                  |
   \*--------------------------------------------------------------*/
  IF cmd='CMD' & execute\='EXECUTE' THEN
    SAY "EXECUTE option not specified; Data sets will NOT be deleted."
  dsname = "'" || STRIP(dsname) || "'"  /* Enclose dsname in quotes  */

        /* Convert DSCRDT2 to YYYY.DDD */

  credt = RIGHT(C2X(dscrdt2),2) || LEFT(C2X(dscrdt2),5)
  credt = LEFT(1900000+credt,4) || '.' || RIGHT(credt,3)
    /* SAY dsname type C2X(devtyp) credt /* DATE('U',credt,'J') */*/
  credt = "/*" credt                    /* Display date on DEL cmd   */
   /*
  credt = " "                           /* Do not display date       */
   */

  IF volser='MIGRAT' THEN
    cmd="HDELETE" dsname                /* Migrated data set         */
  ELSE
    IF type='A' | type='H' THEN
      IF SUBSTR(devtyp,3,1) = '20'x THEN  /* DEVICE CLASS = DISK ? */
        cmd="DELETE" dsname "SCRATCH" credt             /* DISK */
      ELSE
        cmd="DELETE" dsname "NOSCRATCH" credt           /* TAPE */
    ELSE
      cmd="DELETE" dsname credt                         /* VSAM */
   /*--------------------------------------------------------------*\
   |               Execute DELETE/HDELETE commands                  |
   \*--------------------------------------------------------------*/
  IF execute='EXECUTE' THEN DO          /* EXECUTE option specified? */
    cmd                                 /*   YES, issue DELETE cmd   */
    IF rc>0 THEN maxcc=12               /*  remember we had an error */
    END
  ELSE
    SAY cmd                             /*   NO, display command     */
  RETURN
