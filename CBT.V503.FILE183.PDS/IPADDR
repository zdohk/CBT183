/*************************************************************** REXX *\
|*                                                                    *|
|* Module Name: IPADDR                                                *|
|*                                                                    *|
|* Descriptive Name:  Retrieve IP address from Telnet server          *|
|*                                                                    *|
|* Status: R300                                                       *|
|*                                                                    *|
|* Function: This REXX program uses the NETSTAT command to            *|
|*           retrieve the IP address which corresponds to the         *|
|*           current TSO/E session.                                   *|
|*                                                                    *|
|* Author: Gilbert Saint-Flour <carlos@gsf-soft.com>                  *|
|*                                                                    *|
|* Environment: TSO/E V2                                              *|
|*              TCP/IP for MVS 3.1 & 3.2                              *|
|*              OS/390 eNetwork IP V2R5 (TCP/IP 3.5)                  *|
|*                                                                    *|
|* Operation: see below                                               *|
|*                                                                    *|
|*        IPADDR can be invoked as a command, a sub-routine,          *|
|*        a function, or an ISPF EDIT macro.  When invoked as         *|
|*        a command or EDIT macro, IPADDR displays the IP             *|
|*        address; when invoked as a sub-routine or function,         *|
|*        IPADDR returns the IP address to the invoker using          *|
|*        the RETURN instruction.                                     *|
|*                                                                    *|
|* Syntax: IPADDR <jobname> <terminal>                                *|
|*           or                                                       *|
|*         CALL IPADDR <jobname> <terminal>                           *|
|*           or                                                       *|
|*         rc=IPADDR(<jobname>,<terminal>)                            *|
|*                                                                    *|
|*          jobname is the jobname of the TCP/IP address space,       *|
|*            which defaults to the standard TCP/IP default name.     *|
|*            Specifying an asterisk indicates the default job name.  *|
|*                                                                    *|
|*          terminal is the name of the terminal; the default is the  *|
|*            terminal associated to the current TSO session.         *|
|*                                                                    *|
|* Change Activity:                                                   *|
|*                                                                    *|
|* 300 Support for OS/390 eNetwork IP V2R5 (TCP/IP 3.5)               *|
|*                                                                    *|
\**********************************************************************/
ARG jobname,termid                     /*  ipaddr(tcpip4,term22)   */
IF WORDS(jobname)>1 THEN
  ARG jobname termid                   /*  ipaddr(tcpip4 term22)   */
IF jobname || termid = '' THEN
  IF SYSVAR(SYSISPF)='ACTIVE' THEN
    "ISREDIT MACRO (jobname termid)"   /*  EDIT macro              */
IF jobname='*' THEN
  jobname=''                           /*  Default IP Stack        */
UPPER jobname termid
  /*----------------------------------------------------------------*\
  |*              Retrieve TCP/IP Version                           *|
  \*----------------------------------------------------------------*/
cvt = C2D(STORAGE(10,4))                 /*  CVTPTR                 */
ecvt = C2D(STORAGE(D2X(cvt+140),4))      /*  CVTECVT                */
tsab = C2D(STORAGE(D2X(ecvt+176),4))     /*  ECVTTCP                */
IF tsab>0 THEN DO
  tseb=tsab+64                           /*  1st TSEB               */
  tsebname=STORAGE(D2X(tseb+16),8)       /*  TSEB_TCPIP_NAME        */
  version=C2X(STORAGE(D2X(tseb+26),2))   /*  TSEB_TCPIP_VERSION     */
  END
ELSE DO
  tsebname='TCPIP'                       /*  TSEB_TCPIP_NAME        */
  version=0301                           /*  TSEB_TCPIP_VERSION     */
  END
IF termid='' THEN termid = SYSVAR(SYSTERMID)
IF jobname='' THEN
  SAY 'Terminal:' termid ' TCP/IP name:' tsebname ' Version:' version
ELSE
  SAY 'Terminal:' termid ' TCP/IP name:' jobname ' Version:' version

IF jobname='' & tsebname \= 'TCPIP' THEN DO
  IF LISTDSI('SYSTCPD' 'FILE') = 16 THEN
    jobname = tsebname
  END
IF jobname\='' THEN jobname='TCP' jobname

addr='';port=''                        /* init IP address and port */
IF version>0302 THEN
  CALL OS390_STACK                     /* OS/390 STACK */
ELSE
  CALL MVS_STACK                       /* version=0301 or 0302 */
PARSE SOURCE . env .
IF env\='COMMAND' THEN
  RETURN addr                          /* FUNCTION or SUBROUTINE */
IF addr='' THEN
  SAY 'IP address not found for terminal' termid
ELSE
  SAY 'Terminal:' termid ' IP address:' addr ' Port:' port
EXIT
  /*----------------------------------------------------------------*\
  |*               OS/390 eNetwork IP V2R5 (TCP/IP 3.5)             *|
  \*----------------------------------------------------------------*/
OS390_STACK:
  cmd="NETSTAT TELNET" jobname "(LUNAME" termid
  SAY SPACE(cmd,1)                     /* display NETSTAT command */
  x=OUTTRAP('line.')
  cmd                                  /* execute NETSTAT command */
  x=OUTTRAP('off')
  IF rc=0 THEN DO i=1 to line.0
 /* EZZ2803I 014A 1.1.0.6..1797 Establsh 3761 63371 A06TSO02 SC0TCP01 */
    IF WORD(line.i,4) = 'Establsh' THEN
      addrport = WORD(line.i,3)
    ELSE  /* 014A 1.1.0.6..1797 Establsh 3761 63371 A06TSO02 SC0TCP01 */
      IF WORD(line.i,3) = 'Establsh' THEN
        addrport = WORD(line.i,2)
    END
  IF addrport \= 'ADDRPORT' THEN
    PARSE VAR addrport addr '..' port
  RETURN
  /*----------------------------------------------------------------*\
  |*             MVS TCP/IP stack: Version 3.1 or 3.2               *|
  \*----------------------------------------------------------------*/
MVS_STACK:
  "NEWSTACK"
  "NETSTAT TELNET" jobname "STACK"
  DO QUEUED()
    PULL line
     /* EZA0093I 1000 Establshd 192.168.0.6 91 247 0001 SC0TCP01 TSO */
    IF LEFT(line,3) = 'EZA' THEN DO
      IF WORD(line,1) = 'EZA0216E' THEN SIGNAL EZA0216E
      IF termid = WORD(line,8) THEN DO
        addr = WORD(line,4)
        LEAVE
        END
      END
    ELSE DO   /* 1000 Establshd 192.168.0.6 91 247 0001 SC0TCP01 TSO */
      IF WORD(line,1) = 'CANNOT' THEN SIGNAL EZA0216E
      IF termid = WORD(line,7) THEN DO
        addr = WORD(line,3)
        LEAVE
        END
      END
  END
  "DELSTACK"
  RETURN
/*EZA0216E CANNOT USE TCP/IP: FATAL INTER-ADDRESS COMMUNICATIONS ERROR*/
  EZA0216E: SAY line; "DELSTACK"; EXIT 16
