//GILBERTN JOB (ACCT#),NOTIFY=&SYSUID,CLASS=A,MSGCLASS=H,COND=(0,NE)
//HLASM EXEC PGM=ASMA90,PARM=(OBJECT,NODECK,NOESD,NORLD,NOXREF)
***********************************************************************
*                                                                     *
* MODULE NAME = FULLDSN                                               *
*                                                                     *
* DESCRIPTIVE NAME = REXX function: returns fully-qualified dsname.   *
*                                                                     *
* STATUS = R100                                                       *
*                                                                     *
* FUNCTION = This assembler sub-routine can be invoked in a REXX      *
*            EXEC to convert an alias name into the corresponding     *
*            real dsname, or a dsname with a relative generation      *
*            number such as PROD.MASTER(-2) into a fully-qualified    *
*            dsname such as PROD.MASTER.G12345V00.                    *
*                                                                     *
* AUTHOR = Gilbert Saint-Flour <carlos@gsf-soft.com>                  *
*          http://gsf-soft.com/Freeware/                              *
*                                                                     *
*        Note: This is a rewrite of Doug Nadel's REALNAME program     *
*              to make it re-entrant and improve performance when     *
*              FULLDSN is invoked multiple times in the same exec.    *
*                                                                     *
* ENVIRONMENT = SEE BELOW                                             *
*                                                                     *
*    DEPENDENCIES: TSO/E V2                                           *
*                                                                     *
* MODULE TYPE = PROCEDURE, (CSECT TYPE)                               *
*                                                                     *
*    PROCESSOR = IBM OS/ASSEMBLER H VERSION 2 or                      *
*                IBM HIGH LEVEL ASSEMBLER/MVS                         *
*                                                                     *
*    MODULE SIZE = 2K                                                 *
*                                                                     *
*    ATTRIBUTES = REENTERABLE, RMODE ANY, AMODE 31,                   *
*                 PROBLEM STATE, KEY 8                                *
*                 APF AUTHORIZATION: NONE                             *
*                                                                     *
* SYNTAX  =  See below                                                *
*                                                                     *
*         fdsn=FULLDSN(dsname)                                        *
*                                                                     *
*    Arguments:                                                       *
*                                                                     *
*         dsname    This is the input data set name which will be     *
*                   converted to a real dsname or a fully-qualified   *
*                   GDS name such as PROD.MASTER.G12345V00.           *
*                                                                     *
***********************************************************************
FULLDSN  RSECT
FULLDSN  RMODE ANY
         SAVE  (14,12),,FULLDSN
         LR    R12,R15
         USING FULLDSN,R12
         LM    R2,R3,16(R1)        R2/R3
*
*        Allocate dynamic storage
*
         GETMAIN R,LV=DYNAML
         LR    R11,R1              A(DYNAM)
         USING DYNAM,R11
*
*        Make sure I stay in memory for the life of the exec
*
         L     R4,PSATOLD-PSA(0,0) my TCB
         USING TCB,R4
         L     R4,TCBJSTCB         job-step TCB
         L     R5,TCBJPQ           my CDE
         USING CDENTRY,R5
         CLI   CDUSE+1,1           first time through?
         BNE   PIN99               no, jump
         TM    CDATTR,CDREN        reentrant module?
         BZ    PIN99               no, jump
         CL    R12,CDENTPT         is this my CDE?
         BNE   PIN99               no, jump
         LOAD  EPLOC=CDNAME        bump my own use count
PIN99    EQU   *
         DROP  R5                  CDENTRY
*
         L     R3,0(,R3)           R3 = address REXX eval block
         USING EVALBLOCK,R3
*
*        Move dsname to result area
*
         LM    R4,R5,0(R2)         R6/R7 = Addr/Length of input dsn
         LA    R6,EVALBLOCK_EVDATA R4 = addr(evalblock_evdata);
         LA    R7,44               R5 = length(evalblock_evdata);
         ST    R7,EVALBLOCK_EVLEN  Result length=44
         ICM   R5,B'1000',=C' '    padding character
         MVCL  R6,R4               evalblock_evdata(1:44) = input dsn
*
*        Look up dsname in the catalog
*
         L     R14,CAMLST1         CAMLST flags
         LA    R15,EVALBLOCK_EVDATA R15 = addr(dsname)
         SLR   R0,R0               CVOL addr
         LA    R1,WORKAREA         addr of LOCATE work-area
         STM   R14,R1,CAMLST2      build CAMLST in dynamic storage
         LOCATE CAMLST2            Issue locate
         LTR   R15,R15             IF r15 = 0 THEN
         BZ    EXIT                  goto exit
*
*        Set up error code
*
         LA    R0,7                RESULT length=7
         ST    R0,EVALBLOCK_EVLEN  RESULT length=7
         MVC   EVALBLOCK_EVDATA(7),=CL7'UNKNOWN'  RESULT='UNKNOWN'
*
*        Clean up and exit
*
EXIT     FREEMAIN R,LV=DYNAML,A=(R11)
         RETURN (14,12),RC=0       Return code(0)
*
*        Model catalog parm list
*
CAMLST1  CAMLST NAME,*-*,,*-*
*
*        Dynamic storage area
*
DYNAM    DSECT
CAMLST2  CAMLST NAME,EVALBLOCK_EVDATA,,WORKAREA
WORKAREA DS    32D
DYNAML   EQU   *-DYNAM
*
*        Control Block Definitions
*
*        IKJTCB DSECT=YES
TCB      DSECT
TCBJPQ   EQU   *+44,4                  last CDE
TCBJSTCB EQU   *+124,4                 JS TCB
*        IHAPSA DSECT=YES
PSA      DSECT
PSATOLD  EQU   *+540,4                 own TCB
         IHACDE
         IRXEVALB
         YREGS
         END   FULLDSN
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR                IRXEVALB
//         DD DSN=SYS1.MODGEN,DISP=SHR                IHACDE
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=VIO,SPACE=(CYL,1)
//SYSLIN   DD UNIT=VIO,SPACE=(TRK,1),DISP=(,PASS),DCB=BLKSIZE=3200
//*
//LKED    EXEC PGM=IEWL,PARM=RENT
//SYSLIN   DD DSN=*.HLASM.SYSLIN,DISP=(OLD,PASS)
//SYSLMOD  DD DSN=GILBERT.LOAD(FULLDSN),DISP=SHR
//SYSPRINT DD SYSOUT=*
//*
//GO      EXEC PGM=IKJEFT01
//STEPLIB  DD DSN=CBTTAPE.FILE183.LOAD,DISP=SHR       REXXTRY
//         DD DSN=GILBERT.LOAD,DISP=SHR               FULLDSN
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
REXXTRY
SAY FULLDSN('GILBERT.CTC(0)')
SAY FULLDSN('GILBERT.CTC(0)')
SAY FULLDSN('GILBERT.CTC(0)')
/*
